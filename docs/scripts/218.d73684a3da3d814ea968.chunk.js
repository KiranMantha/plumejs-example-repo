"use strict";(self.webpackChunkplumejs_example_repo=self.webpackChunkplumejs_example_repo||[]).push([[218],{218:(e,t,s)=>{s.r(t);var l=s(655),o=s(394),i=s(647);let n=class NestedModal{modalsrvc;ObservedProperties=["nestedModalData"];nestedModalData;constructor(e){this.modalsrvc=e}openAnotherModal(){const e=this.modalsrvc.show({renderTemplate:()=>o.dy`<div>i'm nested modal</div>`,modalTitle:"nested modal",modalClass:"nested-class"});e.onOpen.subscribe((()=>{console.log("nested modal open")})),e.onClose.subscribe((()=>{console.log("nested modal closed")}))}render(){return this.nestedModalData?o.dy`
				<div>sample modal</div>
				<div>${this.nestedModalData.message}</div>
				<button
					class="button is-small is-info"
					onclick=${()=>{this.openAnotherModal()}}
				>
					open another modal
				</button>
			`:o.dy``}};n=(0,l.gn)([(0,o.wA)({selector:"nested-modal"}),(0,l.w6)("design:paramtypes",[i.Z7])],n);var a=s(674);let d=class PlumeComponents{renderer;router;modalsrvc;notifySrvc;constructor(e,t,s,l){this.renderer=e,this.router=t,this.modalsrvc=s,this.notifySrvc=l}toggleInput={onchange:this.onToggleChange.bind(this),onText:"ON",offText:"OFF"};multiselectToggles={enableMultiselect:{onchange:e=>{this.multiSelectOptions.multiple=e,this.multiSelectOptions.resetWidget=!0,this.multiSelectRef.setProps({multiSelectOptions:this.multiSelectOptions})}},disableDropdown:{onchange:e=>{this.multiSelectOptions.disableDropdown=e,this.multiSelectOptions.resetWidget=!0,this.multiSelectRef.setProps({multiSelectOptions:this.multiSelectOptions})}},enableFilter:{onchange:e=>{this.multiSelectOptions.enableFilter=e,this.multiSelectOptions.resetWidget=!0,this.multiSelectRef.setProps({multiSelectOptions:this.multiSelectOptions})}}};multiSelectOptions={data:[{name:"option1"},{name:"option2"},{name:"option3"},{name:"option4"},{name:"option5"}],selectedValues:[{name:"option1"},{name:"option2"}],displayField:"name",multiple:!1,disableDropdown:!1,buttonText:e=>0===e.length?"None selected":e.length>3?e.length+" selected":e.map((e=>e.name)).join(", "),onchange:e=>{console.log(e)}};nestedModalRef;sampleToggleRef;enableMultiselectRef;disableDropdownRef;enableFilterRef;multiSelectRef;mount(){console.log(this.router.getCurrentRoute()),this.sampleToggleRef.setProps({toggleOptions:this.toggleInput}),this.enableMultiselectRef.setProps({toggleOptions:this.multiselectToggles.enableMultiselect}),this.disableDropdownRef.setProps({toggleOptions:this.multiselectToggles.disableDropdown}),this.enableFilterRef.setProps({toggleOptions:this.multiselectToggles.enableFilter}),this.multiSelectRef.setProps({multiSelectOptions:this.multiSelectOptions})}openModal(){const e=this.modalsrvc.show({renderTemplate:()=>o.dy`<nested-modal
          ref=${e=>{this.nestedModalRef=e}}
        ></nested-modal>`,modalTitle:"testing modal",modalClass:"sample-class"});e.onOpen.subscribe((()=>{console.log("main modal open",e.Id),this.nestedModalRef.setProps({nestedModalData:{message:"Hello World"}})})),e.onClose.subscribe((()=>{console.log("main modal closed")}))}notify(){this.notifySrvc.sendMessage("hello world",i.k$.Info)}notifyWithAutoHide(){this.notifySrvc.sendMessage("hello world",i.k$.Info,!0)}onToggleChange(e){console.log(e)}render(){return o.dy`
      <div>
        <h2 class="title is-3 mb-20">Plumejs UI Control Collection</h2>
        <div class="mb-20">
          <h5 class="title is-5">Modal</h5>
          <button
            class="button is-small is-info"
            onclick=${()=>{this.openModal()}}
          >
            Open Modal
          </button>
        </div>
        <div class="mb-20">
          <h5 class="title is-5">Notification</h5>
          <button
            class="button is-small is-info mr-10"
            onclick=${()=>{this.notify()}}
          >
            Notify with action
          </button>
          <button
            class="button is-small is-info"
            onclick=${()=>{this.notifyWithAutoHide()}}
          >
            Notify with auto hide
          </button>
        </div>
        <div class="mb-20">
          <h5 class="title is-5">Toggle Button</h5>
          <toggle-button
            ref=${e=>{this.sampleToggleRef=e}}
          ></toggle-button>
        </div>
        <div class="mb-20">
          <h5 class="title is-5">Multi select</h5>
          <div>
            <div class="is-flex mb-20">
              <span>enable multi select</span>
              <toggle-button
                ref=${e=>{this.enableMultiselectRef=e}}
              ></toggle-button>
            </div>
            <div class="is-flex mb-20">
              <span>disable dropdown</span>
              <toggle-button
                ref=${e=>{this.disableDropdownRef=e}}
              ></toggle-button>
            </div>
            <div class="is-flex mb-20">
              <span>enable filtering</span>
              <toggle-button
                ref=${e=>{this.enableFilterRef=e}}
              ></toggle-button>
            </div>
          </div>
          <div class="is-flex">
            <multi-select
              ref=${e=>{this.multiSelectRef=e}}
            ></multi-select>
          </div>
        </div>
      </div>
    `}};d=(0,l.gn)([(0,o.wA)({selector:"plume-comp"}),(0,l.w6)("design:paramtypes",[o.Th,a.F,i.Z7,i.gq])],d)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,