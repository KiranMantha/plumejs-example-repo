"use strict";(self.webpackChunkplumejs_example_repo=self.webpackChunkplumejs_example_repo||[]).push([[558],{2558:(e,o,n)=>{n.d(o,{Z7:()=>r,gq:()=>d,k$:()=>s,aA:()=>l});var t=n(655),i=n(6394);let r=class ModalService{_modalList=new Map;_addChild(e,o=document.body){o.appendChild(e)}_removeChild(e,o=document.body){o.removeChild(e)}_addModal(e){const o=document.createElement("ui-modal-dialog");this._addChild(o);const n=o,t=n.getInstance(),i=(new Date).getTime(),r={onClose:t.onClose,onOpen:t.onOpen,Id:i};return t.onClose.subscribe((()=>{this.close(r)})),n.setProps({modalData:{Id:i,title:e.modalTitle,bodyTemplate:e.renderTemplate(),backdrop:e.backdrop||!1,hideDefaultCloseButton:e.hideDefaultCloseButton||!1}}),e.modalClass&&o.classList.add(e.modalClass),this._modalList.set(i,o),r}show(e){if(!e.renderTemplate)throw Error("Provide renderTemplate function to render html inside modal component.");return this._addModal(e)}close(e){const o=this._modalList.get(e.Id);this._removeChild(o),this._modalList.delete(e.Id)}closeAll(){for(const e of this._modalList.values())this._removeChild(e);this._modalList.clear()}};r=(0,t.gn)([(0,i.GS)()],r);var s;!function(e){e.Info="info",e.Danger="danger"}(s||(s={}));class Message{content;type;index;autoHide=!1;constructor(e,o=s.Info,n=!1){this.content=e,this.type=o,this.autoHide=n}}let d=class NotificationService{_containerModel;_addChild(e,o=document.body){o.appendChild(e)}_removeChild(e,o=document.body){o.removeChild(e)}_addMessage(e){let o=document.getElementsByTagName("ui-notification-container")[0];if(o||(o=document.createElement("ui-notification-container"),this._addChild(o)),!this._containerModel){const e=o;this._containerModel=e.getInstance(),this._containerModel.onDismiss.subscribe((e=>{0===e&&(this._removeChild(o),this._containerModel=null)}))}this._containerModel.setNotifications(e)}sendMessage(e,o=s.Info,n=!1){const t=new Message(e,o,n);this._addMessage(t)}};d=(0,t.gn)([(0,i.GS)()],d);n(9784);n(8575);const l=()=>Promise.resolve().then(n.bind(n,8575))},8575:(e,o,n)=>{n.r(o),n.d(o,{DropdownComponent:()=>d});var t=n(655),i=n(6394),r=n(9866);const s={options:[],multiple:!1,defaultText:"Select",buttonText:null,enableFilter:!1,disable:!1,resetDropdown:!1};let d=class DropdownComponent{renderer;ObservedProperties=["dropdownOptions"];dropdownOptions={...s};_detailsNode;_summaryNode;_optionsContainerNode;_summaryText;_isMultiSelect=!1;_selectedOptions=[];constructor(e){this.renderer=e}onPropsChanged(){if(this.dropdownOptions.options.length){this.dropdownOptions={...s,...this.dropdownOptions};const{multiple:e,resetDropdown:o}=this.dropdownOptions;o&&(this._selectedOptions=[],this.dropdownOptions.options=this.dropdownOptions.options.map((e=>(e.selected=!1,e)))),this._isMultiSelect=e,this._getSummaryText()}}onOptionSelected(e,o,n){let t="";this._isMultiSelect?(this.dropdownOptions.options[n].selected=e,this._selectedOptions=this.dropdownOptions.options.filter((e=>!!e.selected)),t=this.dropdownOptions.buttonText?this.dropdownOptions.buttonText(this._selectedOptions):this._selectedOptions.length?this._selectedOptions.map((e=>e.label)).join(", "):this.dropdownOptions.defaultText):(t=o.label,this._detailsNode.removeAttribute("open")),this._summaryNode.textContent=t,this.renderer.emitEvent("optionselected",{option:this._isMultiSelect?this._selectedOptions:o})}_getSummaryText(){this._selectedOptions=this.dropdownOptions.options.filter((e=>!!e.selected)),this._isMultiSelect?this._summaryText=this._selectedOptions.map((e=>e.label)).join(",")||this.dropdownOptions.defaultText:this._selectedOptions.length?this._summaryText=this._selectedOptions[0].label:(this.dropdownOptions.options[0].selected=!0,this._summaryText=this.dropdownOptions.options[0].label)}_buildItems(){const e=this.dropdownOptions.options.map(((e,o)=>i.dy`
        <li>
          <input
            name="select"
            id="id-${o}"
            type="${this._isMultiSelect?"checkbox":"radio"}"
            checked=${!!e.selected}
            onchange=${n=>{this.onOptionSelected(n.target.checked,e,o)}}
          />
          <label for="id-${o}"> ${e.label} </label>
        </li>
      `));if(this.dropdownOptions.enableFilter){const o=i.dy` <li class="filter">
        <input
          type="search"
          oninput=${e=>{this._filterList(e.target.value)}}
        />
      </li>`;e.unshift(o)}return e}_filterList(e){const o=this._optionsContainerNode.querySelectorAll("label");Array.from(o).forEach((o=>{const n=o.textContent||o.innerText;e?-1!==n.toLowerCase().indexOf(e)?o.parentElement.classList.remove("hide-item"):o.parentElement.classList.add("hide-item"):o.parentElement.classList.remove("hide-item")}))}render(){return this.dropdownOptions.options.length?i.dy`
        <details
          role="dropdown"
          class="${this.dropdownOptions.disable?"disabled":""}"
          ref=${e=>{this._detailsNode=e}}
        >
          <summary
            ref=${e=>{this._summaryNode=e}}
          >
            ${this._summaryText}
          </summary>
          <div>
            <ul
              ref=${e=>{this._optionsContainerNode=e}}
            >
              ${this._buildItems()}
            </ul>
          </div>
        </details>
      `:i.dy`<div></div>`}};d=(0,t.gn)([(0,i.wA)({selector:"ui-dropdown",styles:r.Z}),(0,t.w6)("design:paramtypes",[i.Th])],d)},9784:(e,o,n)=>{n.r(o),n.d(o,{ToggleComponent:()=>d});var t=n(655),i=n(6394),r=n(4734);const s={onText:"ON",offText:"OFF",isSelected:!1};let d=class ToggleComponent{renderer;ObservedProperties=["toggleOptions"];toggleOptions={...s};_id=Math.random();constructor(e){this.renderer=e}toggleChange(e){const o=e.target.checked;this.renderer.emitEvent("togglechange",o)}render(){return i.dy`<div class="toggle-container">
      <span>${this.toggleOptions.offText.translate()}</span>
      <input
        type="checkbox"
        id="${this._id}"
        checked="${!!this.toggleOptions.isSelected}"
        onchange=${e=>{this.toggleChange(e)}}
      />
      <label for="${this._id}"></label>
      <span>${this.toggleOptions.onText.translate()}</span>
    </div>`}};d=(0,t.gn)([(0,i.wA)({selector:"ui-toggle-button",styles:r.Z}),(0,t.w6)("design:paramtypes",[i.Th])],d)},9866:(e,o,n)=>{n.d(o,{Z:()=>u});var t=n(7537),i=n.n(t),r=n(3645),s=n.n(r),d=n(1667),l=n.n(d),A=new URL(n(6240),n.b),a=new URL(n(6035),n.b),p=s()(i()),c=l()(A),C=l()(a);p.push([e.id,'details[role=dropdown].disabled{cursor:not-allowed}details[role=dropdown].disabled>summary{pointer-events:none;color:rgba(16,16,16,.3)}details[role=dropdown]>summary{list-style:none;position:relative;cursor:pointer;padding:.5rem 1rem;line-height:1;color:inherit;border:1px solid #ccc;border-radius:2px}details[role=dropdown]>summary::-webkit-details-marker{display:none}details[role=dropdown]>summary::after{content:"";height:20px;width:20px;pointer-events:none;background-image:url('+c+');background-repeat:no-repeat;background-position:center;float:right;margin-top:-2px;margin-left:10px}details[role=dropdown]>summary div{margin-right:30px}details[role=dropdown][open]>summary{border-bottom-left-radius:0;border-bottom-right-radius:0}details[role=dropdown][open]>summary::before{position:fixed;top:0;right:0;bottom:0;left:0;z-index:80;display:block;cursor:default;content:" ";background:transparent}details[role=dropdown][open]>summary::after{transform:rotate(180deg)}details[role=dropdown] summary+div{position:relative}details[role=dropdown] summary+div ul{position:absolute;top:auto;left:0px;right:0px;border:1px solid #ccc;border-top:none;border-bottom-left-radius:2px;border-bottom-right-radius:2px;background-color:#fff;z-index:100;list-style:none}details[role=dropdown] summary+div ul li{box-sizing:border-box;padding:0;color:inherit}details[role=dropdown] summary+div ul li.filter{padding:.5rem 1rem;background-color:#eee;border-bottom:1px solid #ccc}details[role=dropdown] summary+div ul li.filter input[type=search]{width:100%;padding:4px}details[role=dropdown] summary+div ul li.hide-item{display:none}details[role=dropdown] summary+div ul li input[type=radio],details[role=dropdown] summary+div ul li input[type=checkbox]{position:absolute;opacity:0}details[role=dropdown] summary+div ul li input[type=radio]:checked+label,details[role=dropdown] summary+div ul li input[type=checkbox]:checked+label{border-left-color:#3273dc}details[role=dropdown] summary+div ul li input[type=checkbox]+label:before{content:"";margin-right:4px;display:inline-block;width:20px;height:20px;background-color:#fff;border:1px solid;vertical-align:text-bottom}details[role=dropdown] summary+div ul li input[type=checkbox]:checked+label:before{background-image:url('+C+");background-repeat:no-repeat;background-position:center;background-size:.8rem auto;background-color:#3273dc;border:1px solid #3273dc}details[role=dropdown] summary+div ul li label{cursor:pointer;color:inherit;display:block;position:relative;padding:.5rem 1rem;border-left:3px solid transparent;white-space:nowrap}details[role=dropdown] summary+div ul li label:hover{background-color:#eee}","",{version:3,sources:["webpack://./node_modules/@plumejs/ui/dist/mjs/src/ui/dropdown/dropdown.component.scss"],names:[],mappings:"AAQE,gCACE,kBAAA,CACA,wCACE,mBAAA,CACA,uBAAA,CAIJ,+BACE,eAAA,CACA,iBAAA,CACA,cAAA,CACA,kBApBK,CAqBL,aAAA,CACA,aAAA,CACA,qBAAA,CACA,iBAAA,CAEA,uDACE,YAAA,CAGF,sCACE,UAAA,CACA,WAAA,CACA,UAAA,CACA,mBAAA,CACA,wDA9BQ,CA+BR,2BAAA,CACA,0BAAA,CACA,WAAA,CACA,eAAA,CACA,gBAAA,CAGF,mCACE,iBAAA,CAIJ,qCACE,2BAAA,CACA,4BAAA,CAEA,6CACE,cAAA,CACA,KAAA,CACA,OAAA,CACA,QAAA,CACA,MAAA,CACA,UAAA,CACA,aAAA,CACA,cAAA,CACA,WAAA,CACA,sBAAA,CAEF,4CACE,wBAAA,CAIJ,mCACE,iBAAA,CAGF,sCACE,iBAAA,CACA,QAAA,CACA,QAAA,CACA,SAAA,CACA,qBAAA,CACA,eAAA,CACA,6BAAA,CACA,8BAAA,CACA,qBAAA,CACA,WAAA,CACA,eAAA,CAEA,yCACE,qBAAA,CACA,SAAA,CACA,aAAA,CAEA,gDACE,kBA5FC,CA6FD,qBA3Fa,CA4Fb,4BAAA,CAEA,mEACE,UAAA,CACA,WAAA,CAIJ,mDACE,YAAA,CAGF,yHAEE,iBAAA,CACA,SAAA,CAEA,qJACE,yBA7GM,CAkHR,2EACE,UAAA,CACA,gBAAA,CACA,oBAAA,CACA,UAAA,CACA,WAAA,CACA,qBAAA,CACA,gBAAA,CACA,0BAAA,CAGF,mFACE,wDA7HM,CA8HN,2BAAA,CACA,0BAAA,CACA,0BAAA,CACA,wBAlIM,CAmIN,wBAAA,CAIJ,+CACE,cAAA,CACA,aAAA,CACA,aAAA,CACA,iBAAA,CACA,kBA/IC,CAgJD,iCAAA,CACA,kBAAA,CAEA,qDACE,qBAlJW",sourcesContent:["$padder: 0.5rem 1rem;\n$trigger-border-color: #ccc;\n$option-hover-color: #eee;\n$chevron-color: #3273dc;\n$checkmark-url: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='%23FFF' stroke-width='4' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='20 6 9 17 4 12'%3E%3C/polyline%3E%3C/svg%3E\");\n$chevron-url: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='rgba(65, 84, 98, 0.999)' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E\");\n\ndetails[role='dropdown'] {\n  &.disabled {\n    cursor: not-allowed;\n    & > summary {\n      pointer-events: none;\n      color: rgba(16, 16, 16, 0.3);\n    }\n  }\n\n  & > summary {\n    list-style: none;\n    position: relative;\n    cursor: pointer;\n    padding: $padder;\n    line-height: 1;\n    color: inherit;\n    border: 1px solid $trigger-border-color;\n    border-radius: 2px;\n\n    &::-webkit-details-marker {\n      display: none;\n    }\n\n    &::after {\n      content: '';\n      height: 20px;\n      width: 20px;\n      pointer-events: none;\n      background-image: $chevron-url;\n      background-repeat: no-repeat;\n      background-position: center;\n      float: right;\n      margin-top: -2px;\n      margin-left: 10px;\n    }\n\n    div {\n      margin-right: 30px;\n    }\n  }\n\n  &[open] > summary {\n    border-bottom-left-radius: 0;\n    border-bottom-right-radius: 0;\n\n    &::before {\n      position: fixed;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      z-index: 80;\n      display: block;\n      cursor: default;\n      content: ' ';\n      background: transparent;\n    }\n    &::after {\n      transform: rotate(180deg);\n    }\n  }\n\n  summary + div {\n    position: relative;\n  }\n\n  summary + div ul {\n    position: absolute;\n    top: auto;\n    left: 0px;\n    right: 0px;\n    border: 1px solid $trigger-border-color;\n    border-top: none;\n    border-bottom-left-radius: 2px;\n    border-bottom-right-radius: 2px;\n    background-color: #fff;\n    z-index: 100;\n    list-style: none;\n\n    li {\n      box-sizing: border-box;\n      padding: 0;\n      color: inherit;\n\n      &.filter {\n        padding: $padder;\n        background-color: $option-hover-color;\n        border-bottom: 1px solid $trigger-border-color;\n\n        input[type='search'] {\n          width: 100%;\n          padding: 4px;\n        }\n      }\n\n      &.hide-item {\n        display: none;\n      }\n\n      input[type='radio'],\n      input[type='checkbox'] {\n        position: absolute;\n        opacity: 0;\n\n        &:checked + label {\n          border-left-color: $chevron-color;\n        }\n      }\n\n      input[type='checkbox'] {\n        & + label:before {\n          content: '';\n          margin-right: 4px;\n          display: inline-block;\n          width: 20px;\n          height: 20px;\n          background-color: #fff;\n          border: 1px solid;\n          vertical-align: text-bottom;\n        }\n\n        &:checked + label:before {\n          background-image: $checkmark-url;\n          background-repeat: no-repeat;\n          background-position: center;\n          background-size: calc(1rem * 0.8) auto;\n          background-color: $chevron-color;\n          border: 1px solid $chevron-color;\n        }\n      }\n\n      label {\n        cursor: pointer;\n        color: inherit;\n        display: block;\n        position: relative;\n        padding: $padder;\n        border-left: 3px solid transparent;\n        white-space: nowrap;\n\n        &:hover {\n          background-color: $option-hover-color;\n        }\n      }\n    }\n  }\n}\n"],sourceRoot:""}]);const u=p},4734:(e,o,n)=>{n.d(o,{Z:()=>d});var t=n(7537),i=n.n(t),r=n(3645),s=n.n(r)()(i());s.push([e.id,'.toggle-container{display:inline-flex}.toggle-container>input{display:none}.toggle-container>input+label{background:#bada55;cursor:pointer;text-indent:-9999px;width:2.5rem;height:1.6rem;background:gray;display:inline-block;margin:0 10px;border-radius:50px;position:relative}.toggle-container>input+label:after{content:"";position:absolute;top:5px;left:5px;width:1rem;height:1rem;background:#fff;border-radius:15px;transition:.3s}.toggle-container>input:checked+label{background-color:#007bff}.toggle-container>input:checked+label:after{left:calc(100% - 5px);transform:translateX(-100%)}',"",{version:3,sources:["webpack://./node_modules/@plumejs/ui/dist/mjs/src/ui/toggle/toggle.component.scss"],names:[],mappings:"AAAA,kBACI,mBAAA,CAEA,wBACI,YAAA,CAEA,8BACI,kBAAA,CACA,cAAA,CACA,mBAAA,CACA,YAAA,CACA,aAAA,CACA,eAAA,CACA,oBAAA,CACA,aAAA,CACA,kBAAA,CACA,iBAAA,CAEA,oCACI,UAAA,CACA,iBAAA,CACA,OAAA,CACA,QAAA,CACA,UAAA,CACA,WAAA,CACA,eAAA,CACA,kBAAA,CACA,cAAA,CAIR,sCACI,wBAAA,CAEA,4CACI,qBAAA,CACA,2BAAA",sourcesContent:[".toggle-container {\n    display: inline-flex;\n\n    & > input {\n        display: none;\n\n        &+label {\n            background: #bada55;\n            cursor: pointer;\n            text-indent: -9999px;\n            width: 2.5rem;\n            height: 1.6rem;\n            background: grey;\n            display: inline-block;\n            margin: 0 10px;\n            border-radius: 50px;\n            position: relative;\n\n            &:after {\n                content: '';\n                position: absolute;\n                top: 5px;\n                left: 5px;\n                width: 1rem;\n                height: 1rem;\n                background: #fff;\n                border-radius: 15px;\n                transition: 0.3s;\n            }\n        }\n\n        &:checked+label {\n            background-color: rgb(0, 123, 255);\n\n            &:after {\n                left: calc(100% - 5px);\n                transform: translateX(-100%);\n            }\n        }\n    }\n}"],sourceRoot:""}]);const d=s},1667:e=>{e.exports=function(e,o){return o||(o={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),o.hash&&(e+=o.hash),/["'() \t\n]|(%20)/.test(e)||o.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},6035:e=>{e.exports="data:image/svg+xml,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 width=%2724%27 height=%2724%27 viewBox=%270 0 24 24%27 fill=%27none%27 stroke=%27%23FFF%27 stroke-width=%274%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27%3E%3Cpolyline points=%2720 6 9 17 4 12%27%3E%3C/polyline%3E%3C/svg%3E"},6240:e=>{e.exports="data:image/svg+xml,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 width=%2724%27 height=%2724%27 viewBox=%270 0 24 24%27 fill=%27none%27 stroke=%27rgba%2865, 84, 98, 0.999%29%27 stroke-width=%272%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27%3E%3Cpolyline points=%276 9 12 15 18 9%27%3E%3C/polyline%3E%3C/svg%3E"}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,