{"version":3,"file":"scripts/332.1c83e69ef17916500f33.chunk.js","mappings":"uMAUA,IAAMA,EAAN,MACEC,MAAQ,GAER,KAAAC,GACEC,MAAM,8CACHC,MAAMC,GAAaA,EAASC,SAC5BF,MAAMH,IACLM,KAAKN,MAAQA,EACbO,QAAQC,IAAI,cAAc,GAEhC,CAEA,YAAAC,CAAaC,GACXA,EAAEC,iBACF,MAAMC,EAAW,IAAIC,SAASH,EAAEI,eAChCP,QAAQC,IAAIO,KAAKC,UAAUC,OAAOC,YAAYN,EAASO,WAAY,KAAM,GAC3E,CAEA,MAAAC,GACE,OAAKd,KAAKN,MAAMqB,OAIT,EAAAC,IAAI;;;;;;;;;;;YAWHhB,KAAKN,MAAMuB,KAAI,EAAGC,KAAIC,OAAMC,WACrB,EAAAJ,IAAI;;;qDAG8BE,eAAgBlB,KAAKG;wDAClBe,wBAAyBA;4DACrBC,wBAA2BD;;;yDAG9BE,wBAA4BF;;;4CAGzCA;;;;;;;MA1B/B,EAAAF,IAAI,SAmCf,GAvDIvB,GAAa,UARlB,IAAA4B,WAAU,CACTC,SAAU,qBACVC,OAAQ,sDAMJ9B,GCcN,IAAM+B,EAAN,MACEC,0BAA4C,CAAC,YAE7CC,SACAC,UAEA,iBAAAC,GACE5B,KAAK2B,UAAUE,UAAUC,OAAO,WAClC,CAEA,mBAAAC,GACE,OAAI/B,KAAK0B,SAASM,UAAUjB,OACnBf,KAAK0B,SAASM,UAAUf,KAAKgB,GAC3B,EAAAjB,IAAI;gBACHiB,EAASf;gBACTe,EAASd;gBACTc,EAASC;iBAIZ,EAAAlB,IAAI;;YAIf,CAEA,MAAAF,GACE,OAAId,KAAK0B,SACA,EAAAV,IAAI;;gBAEDhB,KAAK0B,SAASR;gBACdlB,KAAK0B,SAASP;;;wBAGN,KACRnB,KAAK4B,mBAAmB;;;;;;;gBAQvBO,IACLnC,KAAK2B,UAAYQ,CAAG;;;;;;;;;;;;;kBAcdnC,KAAK+B;;;;;QAOV,EAAAf,IAAI,EAEf,GAnEIQ,GAAO,UAVZ,IAAAH,WAAU,CACTC,SAAU,eACVC,OAAQ,iGAQJC,GAyEC,IAAMY,EAAN,MACLC,WAAyB,CACvB,CACEnB,GAAI,EACJC,KAAM,aACNa,UAAW,CACT,CACEd,GAAI,EACJC,KAAM,cACNe,KAAM,QAER,CACEhB,GAAI,EACJC,KAAM,cACNe,KAAM,UAIZ,CACEhB,GAAI,EACJC,KAAM,aACNa,UAAW,KAGf,MAAAlB,GACE,OAAO,EAAAE,IAAI;;;;;;;;;UASLhB,KAAKqC,WAAWpB,KAAKS,GACd,EAAAV,IAAI,4BAA4B,CAAEU;;;;;KAOjD,GA1CWU,GAAW,UAHvB,IAAAf,WAAU,CACTC,SAAU,sBAECc,E","sources":["webpack:///./src/nested-table/editable-table.ts","webpack:///./src/nested-table/index.ts"],"sourcesContent":["import { Component, html, Renderer } from '@plumejs/core';\n\n@Component({\n  selector: 'app-editable-table',\n  styles: `\n    td form {\n      display: none;\n    }\n  `\n})\nclass EditableTable {\n  users = [];\n\n  mount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((users) => {\n        this.users = users;\n        console.log('no renderer');\n      });\n  }\n\n  onFormSubmit(e) {\n    e.preventDefault();\n    const formData = new FormData(e.currentTarget);\n    console.log(JSON.stringify(Object.fromEntries(formData.entries()), null, 4));\n  }\n\n  render() {\n    if (!this.users.length) {\n      return html`Loading`;\n    }\n\n    return html`\n      <table class=\"table-bordered\">\n        <caption>Editable table. Edit any row, click on save and check console</caption>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Email</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          ${this.users.map(({ id, name, email }) => {\n            return html`\n            <tr>\n              <td>\n                <form method=\"GET\" id=\"inline-form-${id}\" onsubmit=${this.onFormSubmit}></form>\n                <input type='hidden' name='id' value='${id}' form='inline-form-${id}'/>\n                <input type='text' name='username' value='${name}' form='inline-form-${id}'/>\n                </td>\n              <td>\n                <input type='text' name='email' value='${email}' form='inline-form-${id}'/>\n              </td>\n              <td>\n                <button form='inline-form-${id}'>save</button>\n              </td>\n            </tr>\n        `;\n          })}\n          \n        </tbody>\n      </table>\n    `;\n  }\n}\n","import { Component, html } from '@plumejs/core';\nimport { IHooks } from '@plumejs/core';\nimport './editable-table';\n\ninterface Category {\n  id: number;\n  name: string;\n  questions: Array<{\n    id: number;\n    name: string;\n    type: string;\n  }>;\n}\n\n@Component({\n  selector: 'app-row-item',\n  styles: `:host {\n      display: table-row-group;\n  }\n  .hide-row {\n      display: none;\n  }\n  `\n})\nclass RowItem implements IHooks {\n  static readonly observedProperties = <const>['category'];\n\n  category: Category;\n  nestedRow: HTMLElement;\n\n  toggleNestedTable() {\n    this.nestedRow.classList.toggle('hide-row');\n  }\n\n  populateNestedTable() {\n    if (this.category.questions.length) {\n      return this.category.questions.map((question) => {\n        return html`<tr>\n          <td>${question.id}</td>\n          <td>${question.name}</td>\n          <td>${question.type}</td>\n        </tr>`;\n      });\n    } else {\n      return html`<tr>\n        <td colspan=\"3\">Please add a question</td>\n      </tr>`;\n    }\n  }\n\n  render() {\n    if (this.category) {\n      return html`\n        <tr>\n          <td>${this.category.id}</td>\n          <td>${this.category.name}</td>\n          <td>\n            <button\n              onclick=${() => {\n                this.toggleNestedTable();\n              }}\n            >\n              toggle\n            </button>\n          </td>\n        </tr>\n        <tr\n          ref=${(row) => {\n            this.nestedRow = row;\n          }}\n          class=\"hide-row\"\n        >\n          <td colspan=\"3\">\n            <table>\n              <thead>\n                <tr>\n                  <th>Question Id</th>\n                  <th>Question</th>\n                  <th>Type</th>\n                </tr>\n              </thead>\n              <tbody>\n                ${this.populateNestedTable()}\n              </tbody>\n            </table>\n          </td>\n        </tr>\n      `;\n    } else {\n      return html``;\n    }\n  }\n}\n\n@Component({\n  selector: 'app-nested-table'\n})\nexport class NestedTable {\n  categories: Category[] = [\n    {\n      id: 1,\n      name: 'category 1',\n      questions: [\n        {\n          id: 1,\n          name: 'how are you',\n          type: 'text'\n        },\n        {\n          id: 2,\n          name: 'what you do',\n          type: 'text'\n        }\n      ]\n    },\n    {\n      id: 2,\n      name: 'category 2',\n      questions: []\n    }\n  ];\n  render() {\n    return html`\n      <table>\n        <thead>\n          <tr>\n            <th>Category Id</th>\n            <th>Category Name</th>\n            <th></th>\n          </tr>\n        </thead>\n        ${this.categories.map((category: Category) => {\n          return html`<app-row-item data-input=${{ category }}></app-row-item>`;\n        })}\n      </table>\n      <br />\n      <br />\n      <app-editable-table></app-editable-table>\n    `;\n  }\n}\n"],"names":["EditableTable","users","mount","fetch","then","response","json","this","console","log","onFormSubmit","e","preventDefault","formData","FormData","currentTarget","JSON","stringify","Object","fromEntries","entries","render","length","html","map","id","name","email","Component","selector","styles","RowItem","static","category","nestedRow","toggleNestedTable","classList","toggle","populateNestedTable","questions","question","type","row","NestedTable","categories"],"sourceRoot":""}