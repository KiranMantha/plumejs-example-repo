{"version":3,"file":"scripts/407.24c0336575181a89bf79.chunk.js","mappings":"kKAGIA,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOC,GAAI,iPAAkP,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,4FAA4F,mDAAmD,MAAQ,GAAG,SAAW,8JAA8J,eAAiB,CAAC,qXAAqX,8uBAA8uB,WAAa,MAE3vD,K,uICHA,IAAIC,EAAiC,MACjCC,eAAiB,GACjBC,UAAY,IAAI,IAChBC,iBAAiBC,GACbC,KAAKJ,eAAiB,IAAII,KAAKJ,eAAgBG,GAC/CA,EAAQE,MAAQD,KAAKJ,eAAeM,OAAS,CACjD,CACAC,QAAQF,GACJD,KAAKJ,eAAiBI,KAAKJ,eAAeQ,QAAQC,IAC9C,GAAIA,EAAEJ,QAAUA,EACZ,OAAOI,CAAC,IAEhBL,KAAKH,UAAUS,KAAKN,KAAKJ,eAAeM,OAC5C,CACAK,oBAAoBC,EAAQC,GACxBD,EAAOE,SAAS,CAAED,iBACdA,EAAaV,QAAQY,UACrBC,YAAW,KACPH,EAAaN,SAAS,GACvB,IAEX,CACAU,uBACI,OAAIb,KAAKJ,eAAeM,OAAS,EAChBF,KAAKJ,eAAekB,KAAKC,IAClC,MAAMC,EAAS,CACXjB,QAASgB,EACTZ,QAAS,KACLH,KAAKG,QAAQY,EAAId,MAAM,GAG/B,OAAO,IAAK;;yBAEFgB,IACNjB,KAAKO,oBAAoBU,EAAET,OAAQQ,EAAO;;SAGrD,IAKU,IAAK,aAEpB,CACAE,UACIlB,KAAKH,UAAUsB,aACnB,CACAC,SACI,OAAO,IAAK,oEAAoEpB,KAAKa,+BACzF,GAEJlB,GAAiC,QAAW,EACxC,QAAU,CACN0B,SAAU,4BACVC,OAAQ,IACRC,YAAY,KAEjB5B,E","sources":["webpack:///../plumejs-ui/dist/src/ui/notifications/notification-container.component.scss","webpack:///../plumejs-ui/dist/src/ui/notifications/notification-container.component.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../plumejs-example-repo/node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../plumejs-example-repo/node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".notifications_wrapper{position:fixed;top:0;right:0;padding:20px}@media(max-width: 576px){.notifications_wrapper{top:0;right:0;left:0;margin:0 auto;display:flex;flex-direction:column;justify-content:center;align-items:center;z-index:100}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../plumejs-ui/dist/src/ui/notifications/notification-container.component.scss\",\"webpack://./../plumejs-ui/dist/src/_mixins.scss\"],\"names\":[],\"mappings\":\"AAEA,uBACE,cAAA,CACA,KAAA,CACA,OAAA,CACA,YAAA,CCJM,yBDQN,uBACE,KAAA,CACA,OAAA,CACA,MAAA,CACA,aAAA,CACA,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,kBAAA,CACA,WAAA,CAAA\",\"sourcesContent\":[\"@import '../../mixins';\\n\\n.notifications_wrapper {\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n  padding: 20px;\\n}\\n\\n@include breakpoint(sm) {\\n  .notifications_wrapper {\\n    top: 0;\\n    right: 0;\\n    left: 0;\\n    margin: 0 auto;\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items: center;\\n    z-index: 100;\\n  }\\n}\\n\",\"@mixin breakpoint($point) {\\n    @if $point == sm {\\n        @media (max-width: 576px) {\\n            @content;\\n        }\\n    }\\n    @else if $point == md {\\n        @media (min-width: 577px) and (max-width: 992px) {\\n            @content;\\n        }\\n    }\\n    @else if $point == lg {\\n        @media (min-width: 993px) and (max-width: 1200px) {\\n            @content;\\n        }\\n    }\\n}\\n\\n@mixin breakpoint-up($point) {\\n    @if $point == sm {\\n        @media (max-width: 576px) {\\n            @content;\\n        }\\n    }\\n    @else if $point == md {\\n        @media (min-width: 577px) {\\n            @content;\\n        }\\n    }\\n    @else if $point == lg {\\n        @media (min-width: 993px) {\\n            @content;\\n        }\\n    }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import { __decorate } from \"tslib\";\nimport { Component, html } from '@plumejs/core';\nimport { Subject } from 'rxjs';\nimport notificationContainerStyles from './notification-container.component.scss?inline';\nlet NotificationContainerComponent = class NotificationContainerComponent {\n    _notifications = [];\n    onDismiss = new Subject();\n    setNotifications(message) {\n        this._notifications = [...this._notifications, message];\n        message.index = this._notifications.length - 1;\n    }\n    dismiss(index) {\n        this._notifications = this._notifications.filter((m) => {\n            if (m.index !== index)\n                return m;\n        });\n        this.onDismiss.next(this._notifications.length);\n    }\n    _renderNotification(target, notification) {\n        target.setProps({ notification });\n        if (notification.message.autoHide) {\n            setTimeout(() => {\n                notification.dismiss();\n            }, 2000);\n        }\n    }\n    _renderNotifications() {\n        if (this._notifications.length > 0) {\n            const list = this._notifications.map((msg) => {\n                const notify = {\n                    message: msg,\n                    dismiss: () => {\n                        this.dismiss(msg.index);\n                    }\n                };\n                return html `\n          <ui-notification-message\n            onrendered=${(e) => {\n                    this._renderNotification(e.target, notify);\n                }}\n          ></ui-notification-message>\n        `;\n            });\n            return list;\n        }\n        else {\n            return html `<div></div>`;\n        }\n    }\n    unmount() {\n        this.onDismiss.unsubscribe();\n    }\n    render() {\n        return html ` <div class=\"notifications_wrapper\" part=\"notifications_wrapper\">${this._renderNotifications()}</div> `;\n    }\n};\nNotificationContainerComponent = __decorate([\n    Component({\n        selector: 'ui-notification-container',\n        styles: notificationContainerStyles,\n        standalone: true\n    })\n], NotificationContainerComponent);\nexport { NotificationContainerComponent };\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","NotificationContainerComponent","_notifications","onDismiss","setNotifications","message","this","index","length","dismiss","filter","m","next","_renderNotification","target","notification","setProps","autoHide","setTimeout","_renderNotifications","map","msg","notify","e","unmount","unsubscribe","render","selector","styles","standalone"],"sourceRoot":""}