{"version":3,"file":"scripts/52.6f0725a7b2cf9bc0548b.chunk.js","mappings":"0OAIA,IAAIA,EAAiC,MACjCC,SACAC,eAAiB,GACjBC,UAAY,IAAI,IAChBC,YAAYH,GACRI,KAAKJ,SAAWA,CACpB,CACAK,iBAAiBC,GACbF,KAAKH,eAAeM,KAAKD,GACzBA,EAAQE,MAAQJ,KAAKH,eAAeQ,OAAS,EAC7CL,KAAKJ,SAASU,QAClB,CACAC,QAAQH,GACJJ,KAAKH,eAAiBG,KAAKH,eAAeW,QAAQC,IAC9C,GAAIA,EAAEL,QAAUA,EACZ,OAAOK,CAAC,IAEhBT,KAAKJ,SAASU,SACdN,KAAKF,UAAUY,KAAKV,KAAKH,eAAeQ,OAC5C,CACAM,oBAAoBC,EAAQC,GACxBD,EAAOE,SAAS,CAAED,iBACdA,EAAaX,QAAQa,UACrBC,YAAW,KACPH,EAAaN,SAAS,GACvB,IAEX,CACAU,uBACI,OAAIjB,KAAKH,eAAeQ,OAAS,EAChBL,KAAKH,eAAeqB,KAAKC,IAClC,MAAMC,EAAS,CACXlB,QAASiB,EACTZ,QAAS,KACLP,KAAKO,QAAQY,EAAIf,MAAM,GAG/B,OAAO,IAAK;;yBAEFiB,IACNrB,KAAKW,oBAAoBU,EAAET,OAAQQ,EAAO;;SAGrD,IAKU,IAAK,aAEpB,CACAE,UACItB,KAAKF,UAAUyB,aACnB,CACAC,SACI,OAAO,IAAK,oEAAoExB,KAAKiB,+BACzF,GAEJtB,GAAiC,QAAW,EACxC,QAAU,CACN8B,SAAU,4BACVC,YAAY,EACZC,OAAQ,IACRC,KAAM,CAAC,SAEX,QAAW,oBAAqB,CAAC,QAClCjC,E,qDCnECkC,E,MAA0B,GAA4B,KAE1DA,EAAwB1B,KAAK,CAAC2B,EAAOC,GAAI,iPAAkP,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,uGAAuG,8DAA8D,MAAQ,GAAG,SAAW,8JAA8J,eAAiB,CAAC,qXAAqX,8uBAA8uB,WAAa,MAEjxD,K","sources":["webpack:///./node_modules/@plumejs/ui/dist/src/ui/notifications/notification-container.component.js","webpack:///./node_modules/@plumejs/ui/dist/src/ui/notifications/notification-container.component.scss"],"sourcesContent":["import { __decorate, __metadata } from \"tslib\";\nimport { Component, html, Renderer } from '@plumejs/core';\nimport { Subject } from 'rxjs';\nimport notificationContainerStyles from './notification-container.component.scss';\nlet NotificationContainerComponent = class NotificationContainerComponent {\n    renderer;\n    _notifications = [];\n    onDismiss = new Subject();\n    constructor(renderer) {\n        this.renderer = renderer;\n    }\n    setNotifications(message) {\n        this._notifications.push(message);\n        message.index = this._notifications.length - 1;\n        this.renderer.update();\n    }\n    dismiss(index) {\n        this._notifications = this._notifications.filter((m) => {\n            if (m.index !== index)\n                return m;\n        });\n        this.renderer.update();\n        this.onDismiss.next(this._notifications.length);\n    }\n    _renderNotification(target, notification) {\n        target.setProps({ notification });\n        if (notification.message.autoHide) {\n            setTimeout(() => {\n                notification.dismiss();\n            }, 2000);\n        }\n    }\n    _renderNotifications() {\n        if (this._notifications.length > 0) {\n            const list = this._notifications.map((msg) => {\n                const notify = {\n                    message: msg,\n                    dismiss: () => {\n                        this.dismiss(msg.index);\n                    }\n                };\n                return html `\n          <ui-notification-message\n            onrendered=${(e) => {\n                    this._renderNotification(e.target, notify);\n                }}\n          ></ui-notification-message>\n        `;\n            });\n            return list;\n        }\n        else {\n            return html `<div></div>`;\n        }\n    }\n    unmount() {\n        this.onDismiss.unsubscribe();\n    }\n    render() {\n        return html ` <div class=\"notifications_wrapper\" part=\"notifications_wrapper\">${this._renderNotifications()}</div> `;\n    }\n};\nNotificationContainerComponent = __decorate([\n    Component({\n        selector: 'ui-notification-container',\n        standalone: true,\n        styles: notificationContainerStyles,\n        deps: [Renderer]\n    }),\n    __metadata(\"design:paramtypes\", [Renderer])\n], NotificationContainerComponent);\nexport { NotificationContainerComponent };\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".notifications_wrapper{position:fixed;top:0;right:0;padding:20px}@media(max-width: 576px){.notifications_wrapper{top:0;right:0;left:0;margin:0 auto;display:flex;flex-direction:column;justify-content:center;align-items:center;z-index:100}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/@plumejs/ui/dist/src/ui/notifications/notification-container.component.scss\",\"webpack://./node_modules/@plumejs/ui/dist/src/_mixins.scss\"],\"names\":[],\"mappings\":\"AAEA,uBACE,cAAA,CACA,KAAA,CACA,OAAA,CACA,YAAA,CCJM,yBDQN,uBACE,KAAA,CACA,OAAA,CACA,MAAA,CACA,aAAA,CACA,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,kBAAA,CACA,WAAA,CAAA\",\"sourcesContent\":[\"@import '../../mixins';\\n\\n.notifications_wrapper {\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n  padding: 20px;\\n}\\n\\n@include breakpoint(sm) {\\n  .notifications_wrapper {\\n    top: 0;\\n    right: 0;\\n    left: 0;\\n    margin: 0 auto;\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items: center;\\n    z-index: 100;\\n  }\\n}\\n\",\"@mixin breakpoint($point) {\\n    @if $point == sm {\\n        @media (max-width: 576px) {\\n            @content;\\n        }\\n    }\\n    @else if $point == md {\\n        @media (min-width: 577px) and (max-width: 992px) {\\n            @content;\\n        }\\n    }\\n    @else if $point == lg {\\n        @media (min-width: 993px) and (max-width: 1200px) {\\n            @content;\\n        }\\n    }\\n}\\n\\n@mixin breakpoint-up($point) {\\n    @if $point == sm {\\n        @media (max-width: 576px) {\\n            @content;\\n        }\\n    }\\n    @else if $point == md {\\n        @media (min-width: 577px) {\\n            @content;\\n        }\\n    }\\n    @else if $point == lg {\\n        @media (min-width: 993px) {\\n            @content;\\n        }\\n    }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["NotificationContainerComponent","renderer","_notifications","onDismiss","constructor","this","setNotifications","message","push","index","length","update","dismiss","filter","m","next","_renderNotification","target","notification","setProps","autoHide","setTimeout","_renderNotifications","map","msg","notify","e","unmount","unsubscribe","render","selector","standalone","styles","deps","___CSS_LOADER_EXPORT___","module","id"],"sourceRoot":""}