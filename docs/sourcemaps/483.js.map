{"version":3,"file":"scripts/483.b2cd527a6a52989d2fc2.chunk.js","mappings":"+JAGIA,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOC,GAAI,gEAAiE,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,6CAA6C,MAAQ,GAAG,SAAW,oDAAoD,eAAiB,CAAC,gHAAgH,WAAa,MAE3Y,K,mDCDO,IAAMC,EAAN,MAIeC,SAHXC,mBAA4B,CAAC,eACtCC,YAEAC,YAAoBH,GAAA,KAAAA,SAAAA,CAAqB,CAEzCI,mBACEC,KAAKL,SAASM,UAAU,YAAaD,KAAKH,YAC5C,CAEAK,SACE,OAAIF,KAAKH,aAAeG,KAAKH,YAAYM,KAChC,IAAI;;qBAEIH,KAAKH,YAAYM;wBACdH,KAAKH,YAAYO,QAAQD;;;qBAG5B,KACTH,KAAKD,kBAAkB;;;;QAOtB,IAAI,aAEf,GA5BWL,GAAa,UAJzB,QAAU,CACTW,SAAU,iBACVC,KAAM,CAAC,SAEIZ,G,qBCAb,IAAMa,EAAN,MACEC,aACE,OAAOC,MAAM,8CAA8CC,MAAMC,GAAQA,EAAIC,QAC/E,GAHIL,GAAa,UADlB,WACKA,GAWC,IAAMM,EAAN,MAKeC,WAAmCC,OAAwBpB,SAJ/EqB,cAAqB,CAAC,EACtBC,MAAQ,GACRC,iBAEApB,YAAoBgB,EAAmCC,EAAwBpB,GAA3D,KAAAmB,WAAAA,EAAmC,KAAAC,OAAAA,EAAwB,KAAApB,SAAAA,EAC7EwB,QAAQC,IAAI,iBAAkBpB,KAAKe,OAAOM,kBAC5C,CAEAC,QACEtB,KAAKc,WAAWN,aAAaE,MAAMa,IACjCvB,KAAKiB,MAAQM,EACbC,YAAW,KACTxB,KAAKL,SAAS8B,QAAQ,GACrB,IAAI,GAEX,CAEAC,kBAAkBC,GAChB3B,KAAKgB,cAAgBW,EACrB3B,KAAKkB,iBAAiBU,SAAS,CAAE/B,YAAa8B,GAChD,CAEAE,gBACE,MAAMC,EAAQ9B,KAAKe,OAAOM,kBAC1B,MAAO,CACLU,KAAMD,EAAMC,KACZC,YAAaC,OAAOC,YAAYJ,EAAME,aACtCG,YAAaF,OAAOC,YAAYJ,EAAMK,aACtCC,MAAON,EAAMM,MAEjB,CAEAC,YAAYC,GACVnB,QAAQC,IAAI,sCAAuCkB,EACrD,CAEApC,SACE,OAAO,IAAI;;;mBAGIqC,KAAKC,UAAUxC,KAAK6B,gBAAiB,KAAM;;;YAGlD7B,KAAKiB,MAAMwB,OACTzC,KAAKiB,MAAMyB,KAAKf,GACP,IAAI;;;+BAGI,KACT3B,KAAK0B,kBAAkBC,EAAK;;sBAG5BA,EAAKxB;;oBAIb;;;;iBAIIwC,IACN3C,KAAKkB,iBAAmByB,CAAI;yBAEdC,IACd5C,KAAKqC,YAAYO,EAAEC,OAAO;;;KAKpC,GAtEWhC,GAAW,UALvB,QAAU,CACTR,SAAU,eACVyC,OAAQ,IACRxC,KAAM,CAACC,EAAe,IAAQ,SAEnBM,E","sources":["webpack:///./src/persons/persons-list.scss","webpack:///./src/persons/person-details.component.ts","webpack:///./src/persons/persons-list.component.ts"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".test{list-style:none;margin:0;padding:0}.test li{color:#000}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/persons/persons-list.scss\"],\"names\":[],\"mappings\":\"AAEA,MACE,eAAA,CACA,QAAA,CACA,SAAA,CACA,SACE,UAPG\",\"sourcesContent\":[\"$grey: #000;\\n\\n.test {\\n  list-style: none;\\n  margin: 0;\\n  padding: 0;\\n  li {\\n    color: $grey;\\n  }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import { Component, html, IHooks, Renderer } from '@plumejs/core';\n\n@Component({\n  selector: 'person-details',\n  deps: [Renderer]\n})\nexport class PersonDetails implements IHooks {\n  readonly ObservedProperties = <const>['userDetails'];\n  userDetails: { name: string; company: { name: string } };\n\n  constructor(private renderer: Renderer) {}\n\n  sendDataToParent() {\n    this.renderer.emitEvent('userclick', this.userDetails);\n  }\n\n  render() {\n    if (this.userDetails && this.userDetails.name) {\n      return html`\n        <strong>Person Details</strong>\n        <div>Name: ${this.userDetails.name}</div>\n        <div>Company: ${this.userDetails.company.name}</div>\n        <button\n          class=\"button is-info is-light\"\n          onclick=\"${() => {\n            this.sendDataToParent();\n          }}\"\n        >\n          click me and check console\n        </button>\n      `;\n    } else {\n      return html`<div></div>`;\n    }\n  }\n}\n","import { Component, ComponentRef, html, Injectable, Renderer } from '@plumejs/core';\nimport { Router } from '@plumejs/router';\nimport { PersonDetails } from './person-details.component';\nimport personListStyles from './persons-list.scss';\n\n@Injectable()\nclass PersonService {\n  getPersons() {\n    return fetch('https://jsonplaceholder.typicode.com/users').then((res) => res.json());\n  }\n}\n\n@Component({\n  selector: 'persons-list',\n  styles: personListStyles,\n  deps: [PersonService, Router, Renderer]\n})\nexport class PersonsList {\n  persondetails: any = {};\n  users = [];\n  personDetailsRef: ComponentRef<PersonDetails>;\n\n  constructor(private personSrvc: PersonService, private router: Router, private renderer: Renderer) {\n    console.log('current route ', this.router.getCurrentRoute());\n  }\n\n  mount() {\n    this.personSrvc.getPersons().then((data) => {\n      this.users = data;\n      setTimeout(() => {\n        this.renderer.update();\n      }, 100);\n    });\n  }\n\n  loadPersonDetails(user: any) {\n    this.persondetails = user;\n    this.personDetailsRef.setProps({ userDetails: user });\n  }\n\n  loadRouteData() {\n    const route = this.router.getCurrentRoute();\n    return {\n      path: route.path,\n      routeParams: Object.fromEntries(route.routeParams),\n      queryParams: Object.fromEntries(route.queryParams),\n      state: route.state\n    };\n  }\n\n  onUserClick(person) {\n    console.log('data from app-person-details comp: ', person);\n  }\n\n  render() {\n    return html`\n      <h4>Sample service injection with http call and passing data to other component</h4>\n      Current route data:\n      <pre><code>${JSON.stringify(this.loadRouteData(), null, 4)}</code></pre>\n      <div class=\"mt-20 mb-20 content\">\n        <ul>\n          ${this.users.length\n            ? this.users.map((user) => {\n                return html`\n                  <li\n                    class=\"is-clickable\"\n                    onclick=\"${() => {\n                      this.loadPersonDetails(user);\n                    }}\"\n                  >\n                    ${user.name}\n                  </li>\n                `;\n              })\n            : 'loading'}\n        </ul>\n        <person-details\n          id=\"person-details\"\n          ref=\"${(node) => {\n            this.personDetailsRef = node;\n          }}\"\n          onuserclick=\"${(e) => {\n            this.onUserClick(e.detail);\n          }}\"\n        ></person-details>\n      </div>\n    `;\n  }\n}\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","PersonDetails","renderer","ObservedProperties","userDetails","constructor","sendDataToParent","this","emitEvent","render","name","company","selector","deps","PersonService","getPersons","fetch","then","res","json","PersonsList","personSrvc","router","persondetails","users","personDetailsRef","console","log","getCurrentRoute","mount","data","setTimeout","update","loadPersonDetails","user","setProps","loadRouteData","route","path","routeParams","Object","fromEntries","queryParams","state","onUserClick","person","JSON","stringify","length","map","node","e","detail","styles"],"sourceRoot":""}