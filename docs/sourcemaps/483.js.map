{"version":3,"file":"scripts/483.626e597b925acf7230eb.chunk.js","mappings":"+JAGIA,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOC,GAAI,gEAAiE,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,6CAA6C,MAAQ,GAAG,SAAW,oDAAoD,eAAiB,CAAC,gHAAgH,WAAa,MAE3Y,O,iDCFA,IAAaC,EAAb,MACWC,mBAA4B,CAAC,eACtCC,YAEAC,SACE,OAAIC,KAAKF,aAAeE,KAAKF,YAAYG,KAChC,IAAI;;qBAEID,KAAKF,YAAYG;wBACdD,KAAKF,YAAYI,QAAQD;QAGpC,IAAI,gBAZJL,GAAa,UAHzB,QAAU,CACTO,SAAU,oBAECP,G,qBCCb,IAAMQ,EAAN,MACEC,aACE,OAAOC,MAAM,8CAA8CC,MAAMC,GAAQA,EAAIC,WAF3EL,GAAa,UADlB,WACKA,GAWN,IAAaM,EAAb,MAMsBC,WAAmCC,OALvDC,cAAqB,GACrBC,OACAC,aACAC,iBAEAC,YAAoBN,EAAmCC,GAAnC,KAAAD,WAAAA,EAAmC,KAAAC,OAAAA,EACrDM,QAAQC,IAAI,iBAAkBnB,KAAKY,OAAOQ,mBAG5CC,QACErB,KAAKW,WAAWN,aAAaE,MAAMe,IACjCtB,KAAKuB,YAAYD,MAIrBE,UAAUC,GACRzB,KAAKa,cAAgBY,EACrBzB,KAAKgB,iBAAiBU,SAAS,CAAE5B,YAAa2B,IAGhDE,gBACE,MAAMC,EAAQ5B,KAAKY,OAAOQ,kBAC1B,MAAO,CACLS,KAAMD,EAAMC,KACZC,YAAaC,OAAOC,YAAYJ,EAAME,aACtCG,YAAaF,OAAOC,YAAYJ,EAAMK,aACtCC,MAAON,EAAMM,OAITX,YAAYD,GAClB,MAAMa,EAAQb,EAAKc,KAAKX,GACf,IAAI;;;oBAGG,KACRzB,KAAKwB,UAAUC;;YAGfA,EAAKxB;;WAIb,QAAOD,KAAKe,aAAc,IAAI,GAAGoB,KAGnCpC,SACE,OAAO,IAAI;;;cAGDsC,KAAKC,UAAUtC,KAAK2B,gBAAiB,KAAM;;;iBAGvCY,IACNvC,KAAKe,aAAewB;;;;iBAKdA,IACNvC,KAAKgB,iBAAmBuB;;;QA7DvB7B,GAAW,UALvB,QAAU,CACTP,SAAU,eACVqC,OAAQ,IACRC,KAAM,CAACrC,EAAe,QAEXM","sources":["webpack:///./src/persons/persons-list.scss","webpack:///./src/persons/person-details.component.ts","webpack:///./src/persons/persons-list.component.ts"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".test{list-style:none;margin:0;padding:0}.test li{color:#000}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/persons/persons-list.scss\"],\"names\":[],\"mappings\":\"AAEA,MACE,eAAA,CACA,QAAA,CACA,SAAA,CACA,SACE,UAPG\",\"sourcesContent\":[\"$grey: #000;\\n\\n.test {\\n  list-style: none;\\n  margin: 0;\\n  padding: 0;\\n  li {\\n    color: $grey;\\n  }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import { Component, html, IHooks } from '@plumejs/core';\n\n@Component({\n  selector: 'person-details'\n})\nexport class PersonDetails implements IHooks {\n  readonly ObservedProperties = <const>['userDetails'];\n  userDetails: { name: string; company: { name: string } };\n\n  render() {\n    if (this.userDetails && this.userDetails.name) {\n      return html`\n        <strong>Person Details</strong>\n        <div>Name: ${this.userDetails.name}</div>\n        <div>Company: ${this.userDetails.company.name}</div>\n      `;\n    } else {\n      return html`<div></div>`;\n    }\n  }\n}\n","import { Component, ComponentRef, html, Injectable, render } from '@plumejs/core';\nimport { Router } from '@plumejs/router';\nimport { PersonDetails } from './person-details.component';\nimport personListStyles from './persons-list.scss';\n\n@Injectable()\nclass PersonService {\n  getPersons() {\n    return fetch('https://jsonplaceholder.typicode.com/users').then((res) => res.json());\n  }\n}\n\n@Component({\n  selector: 'persons-list',\n  styles: personListStyles,\n  deps: [PersonService, Router]\n})\nexport class PersonsList {\n  persondetails: any = {};\n  update: any;\n  usersListRef: HTMLElement;\n  personDetailsRef: ComponentRef<PersonDetails>;\n\n  constructor(private personSrvc: PersonService, private router: Router) {\n    console.log('current route ', this.router.getCurrentRoute());\n  }\n\n  mount() {\n    this.personSrvc.getPersons().then((data) => {\n      this.renderUsers(data);\n    });\n  }\n\n  alertName(user: any) {\n    this.persondetails = user;\n    this.personDetailsRef.setProps({ userDetails: user });\n  }\n\n  loadRouteData() {\n    const route = this.router.getCurrentRoute();\n    return {\n      path: route.path,\n      routeParams: Object.fromEntries(route.routeParams),\n      queryParams: Object.fromEntries(route.queryParams),\n      state: route.state,\n    };\n  }\n\n  private renderUsers(data: Array<any>) {\n    const nodes = data.map((user: any) => {\n      return html`\n        <li\n          class=\"pointer\"\n          onclick=${() => {\n            this.alertName(user);\n          }}\n        >\n          ${user.name}\n        </li>\n      `;\n    });\n    render(this.usersListRef, html`${nodes}`);\n  }\n\n  render() {\n    return html`\n      <h4>Sample service injection with http call and passing data to other component</h4>\n      Current route data:\n      <code>${JSON.stringify(this.loadRouteData(), null, 2)}</code>\n      <div class=\"mt-20 mb-20 content\">\n        <ul\n          ref=\"${(node) => {\n            this.usersListRef = node;\n          }}\"\n        ></ul>\n        <person-details\n          id=\"person-details\"\n          ref=\"${(node) => {\n            this.personDetailsRef = node;\n          }}\"\n        ></person-details>\n      </div>\n    `;\n  }\n}\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","PersonDetails","ObservedProperties","userDetails","render","this","name","company","selector","PersonService","getPersons","fetch","then","res","json","PersonsList","personSrvc","router","persondetails","update","usersListRef","personDetailsRef","constructor","console","log","getCurrentRoute","mount","data","renderUsers","alertName","user","setProps","loadRouteData","route","path","routeParams","Object","fromEntries","queryParams","state","nodes","map","JSON","stringify","node","styles","deps"],"sourceRoot":""}